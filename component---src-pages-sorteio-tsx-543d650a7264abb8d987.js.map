{"version":3,"file":"component---src-pages-sorteio-tsx-543d650a7264abb8d987.js","mappings":"wLAAA,EAAe,IAA0B,kECqBnCA,EAAU,SAAH,GAAoD,IAA9CC,EAAY,EAAZA,aAAcC,EAAK,EAALA,MAAOC,EAAiB,EAAjBA,kBAChCC,EAAkCH,EAAaI,OAAOC,QAC1D,SAACC,GAAW,OAAKA,EAAYC,OAASP,EAAaQ,QAAQC,MAAM,IAG7DC,EAAeV,EAAaI,OAAOO,MACvC,SAACL,GAAW,OAAKA,EAAYC,OAASP,EAAaQ,QAAQC,MAAM,IAGnE,OACE,gCACE,uBAAKG,UAAU,uBACb,2BAASA,UAAU,QACjB,qBACEC,KAAK,iJACLC,OAAO,SACPC,IAAI,cAEJ,uBACEH,UAAU,gBACVI,IAAKC,EACLC,IAAI,oBAKV,2BAASN,UAAU,QACjB,sBAAIA,UAAU,kCAAkCX,EAAMM,MACtD,wBAAMK,UAAU,uBACbZ,EAAaI,OAAOe,OAAS,EAAC,kBAEjC,qBAAGP,UAAU,sBAAsBX,EAAMmB,UAEzC,2BAASR,UAAU,QACjB,0BAAQA,UAAU,kBAAkBS,QAASnB,GAAkB,+BAMnE,2BAASU,UAAU,QACjB,uBAAKA,UAAU,qBACb,gBAAC,KAAW,CAACN,YAAaI,EAAcY,gBAAgB,IACxD,gBAAC,KAAe,CAAChB,YAAaN,EAAaQ,WAE7C,qBACEI,UAAU,qBACVW,MAAO,CAAEC,SAAU,SAAUC,aAAc,SAAS,wBAItD,uBAAKb,UAAU,OACZT,EAAgCuB,KAAI,SAACpB,EAAaqB,GAAK,OACtD,gBAAC,KAAW,CAACC,IAAKD,EAAOrB,YAAaA,GAAe,OAOnE,EA+FA,EA9F8B,WAC5B,IAGA,EAA0BuB,EAAAA,SAHE,CAC1BC,SAAS,IAEJC,EAAK,KAAEC,EAAQ,KAEtB,EAAkCH,EAAAA,UAAe,GAA1CI,EAAS,KAAEC,EAAY,KA4D9B,OAjDAL,EAAAA,WAAgB,WACd,IAAMM,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAC5CC,EAAUL,EAAMM,IAAI,KACpBC,EAAWP,EAAMM,IAAI,KAE3BE,MAASC,0EAA2CJ,EAAO,IAAIE,GAC5DG,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GACL,GAAqB,oBAAjBA,EAAKC,QAKF,GAAqB,KAAjBD,EAAKC,QAAT,CAOP,IAAMjD,EAAegD,EAAKhD,aAAakD,QAAO,SAACC,EAAK7C,GAClD,IAAM8C,EAASD,EAWf,OAVI7C,EAAYE,QACd4C,EAAgB,QAAC,iBACZ9C,EAAY,CACfkC,QAAAA,IAEOY,EAAe,OACxBA,EAAe,OAAEC,KAAK/C,GAEtB8C,EAAe,OAAI,CAAC9C,GAEf8C,CACT,GAAG,CAAC,GAEJpB,EAAS,CACPF,SAAS,EACT9B,aAAAA,EACAC,MAAO,CAAEM,KAAMyC,EAAKzC,KAAMa,SAAU4B,EAAK5B,YAE3Cc,GAAa,EAtBb,MAJEoB,MACE,mJANFA,MACE,uQA+BN,IACCC,OAAM,WACLD,MACE,+HAEJ,GACJ,GAAG,EAAC,IAGF,gCACE,gBAAC,KAAM,KACL,gBAACE,EAAA,EAAM,KACL,wDAGDzB,EAAMD,QACL,gBAAC,KAAa,MAEd,gBAAC/B,EAAO,CACNG,kBArEqB,WAC7BgC,GAAa,EACf,EAoEUjC,MAAO8B,EAAM9B,MACbD,aAAc+B,EAAM/B,eAIvBiC,GACC,gBAAC,KAAK,CACJgB,QAAO,IAAMlB,EAAM/B,aAAaQ,QAAQC,OAAM,IAC9CgD,QA1ES,YACjBC,EAAAA,EAAAA,GAAe,gBAAiB,SAAU,mBAC1CxB,GAAa,EACf,KA6EF,C","sources":["webpack://faq/./src/assets/christmas-advertise.jpg","webpack://faq/./src/pages/sorteio.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/christmas-advertise-42b84c11b32e27318ed1df933766a388.jpg\";","import * as React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { analyticsTrack } from \"../utils\"\nimport {\n  Layout,\n  LoadingScreen,\n  Participant,\n  ParticipantForm,\n  Popup,\n} from \"../components\"\nimport christmasAdvertise from \"../assets/christmas-advertise.jpg\"\n\ninterface State {\n  loading: boolean\n  participants?: any\n  group?: {\n    name: string\n    comments: string\n  }\n}\n\nconst Content = ({ participants, group, showFriendOnClick }) => {\n  const participantsWithoutSecretFriend = participants.others.filter(\n    (participant) => participant.name !== participants.current.friend\n  )\n\n  const secretFriend = participants.others.find(\n    (participant) => participant.name === participants.current.friend\n  )\n\n  return (\n    <>\n      <div className=\"page-container pt-4\">\n        <section className=\"mb-4\">\n          <a\n            href=\"https://www.meliuz.com.br/premium-link/505?utm_source=papelzinho&utm_medium=partner&utm_campaign=campanha100&utm_content=papelzinho-natal-2022\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <img\n              className=\"group__banner\"\n              src={christmasAdvertise}\n              alt=\"Méliuz Páscoa\"\n            ></img>\n          </a>\n        </section>\n\n        <section className=\"mb-4\">\n          <h2 className=\"group__name font-weight-bolder\">{group.name}</h2>\n          <span className=\"group__participants\">\n            {participants.others.length + 1} participantes\n          </span>\n          <p className=\"group__description\">{group.comments}</p>\n\n          <section className=\"mb-4\">\n            <button className=\"show-friend-btn\" onClick={showFriendOnClick}>\n              Revelar meu amigo secreto\n            </button>\n          </section>\n        </section>\n\n        <section className=\"mb-5\">\n          <div className=\"group__friend row\">\n            <Participant participant={secretFriend} isSecretFriend={true} />\n            <ParticipantForm participant={participants.current} />\n          </div>\n          <p\n            className=\"font-weight-bolder\"\n            style={{ fontSize: \"1.8rem\", marginBottom: \"32px\" }}\n          >\n            Outros Participantes\n          </p>\n          <div className=\"row\">\n            {participantsWithoutSecretFriend.map((participant, index) => (\n              <Participant key={index} participant={participant} />\n            ))}\n          </div>\n        </section>\n      </div>\n    </>\n  )\n}\nconst SorteioPage: React.FC = () => {\n  const initialState: State = {\n    loading: true,\n  }\n  const [state, setState] = React.useState(initialState)\n\n  const [showPopup, setShowPopup] = React.useState(false)\n\n  const showFriend: () => void = () => {\n    setShowPopup(true)\n  }\n\n  const hideFriend = () => {\n    analyticsTrack(\"cancel-button\", \"clique\", \"Campanha Méliuz\")\n    setShowPopup(false)\n  }\n\n  React.useEffect(() => {\n    const query = new URLSearchParams(window.location.search)\n    const groupId = query.get(\"g\")\n    const personId = query.get(\"p\")\n\n    fetch(`${process.env.GATSBY_API_HOST}/participant/${groupId}/${personId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message === \"Group not found\") {\n          alert(\n            \"Aparentemente o seu grupo de amigo secreto foi deletado pelo organizador no app. Caso esta mensagem esteja errada e seu grupo não tenha sido excluído, entre em contato com o suporte através do meajuda@papelzinho.com.br ou pelo chat na nossa página do facebook.\"\n          )\n          return\n        } else if (data.message === \"\") {\n          alert(\n            \"Participante não encontrado. Entre em contato com o suporte através do meajuda@papelzinho.com.br ou pelo chat na nossa página do facebook.\"\n          )\n          return\n        }\n\n        const participants = data.participants.reduce((acc, participant) => {\n          const newMap = acc\n          if (participant.current) {\n            newMap[\"current\"] = {\n              ...participant,\n              groupId,\n            }\n          } else if (newMap[\"others\"]) {\n            newMap[\"others\"].push(participant)\n          } else {\n            newMap[\"others\"] = [participant]\n          }\n          return newMap\n        }, {})\n\n        setState({\n          loading: false,\n          participants,\n          group: { name: data.name, comments: data.comments },\n        })\n        setShowPopup(true)\n      })\n      .catch(() => {\n        alert(\n          \"Sistema fora do ar. Estamos trabalhando para corrigir o problema o mais rápido possível. Tente acessar novamente mais tarde.\"\n        )\n      })\n  }, [false])\n\n  return (\n    <>\n      <Layout>\n        <Helmet>\n          <title>Sorteio | Papelzinho ™</title>\n        </Helmet>\n\n        {state.loading ? (\n          <LoadingScreen />\n        ) : (\n          <Content\n            showFriendOnClick={showFriend}\n            group={state.group}\n            participants={state.participants}\n          />\n        )}\n\n        {showPopup && (\n          <Popup\n            message={`\"${state.participants.current.friend}\"`}\n            action2={hideFriend}\n          />\n        )}\n      </Layout>\n    </>\n  )\n}\n\nexport default SorteioPage\n"],"names":["Content","participants","group","showFriendOnClick","participantsWithoutSecretFriend","others","filter","participant","name","current","friend","secretFriend","find","className","href","target","rel","src","christmasAdvertise","alt","length","comments","onClick","isSecretFriend","style","fontSize","marginBottom","map","index","key","React","loading","state","setState","showPopup","setShowPopup","query","URLSearchParams","window","location","search","groupId","get","personId","fetch","process","then","response","json","data","message","reduce","acc","newMap","push","alert","catch","Helmet","action2","analyticsTrack"],"sourceRoot":""}