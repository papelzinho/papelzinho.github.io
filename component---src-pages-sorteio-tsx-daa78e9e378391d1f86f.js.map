{"version":3,"file":"component---src-pages-sorteio-tsx-daa78e9e378391d1f86f.js","mappings":"iJAoBMA,EAAU,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,kBAChCC,EAAkCH,EAAaI,OAAOC,QAC1D,SAACC,GAAD,OAAiBA,EAAYC,OAASP,EAAaQ,QAAQC,UAGvDC,EAAeV,EAAaI,OAAOO,MACvC,SAACL,GAAD,OAAiBA,EAAYC,OAASP,EAAaQ,QAAQC,UAG7D,OACE,gCACE,uBAAKG,UAAU,uBACb,2BAASA,UAAU,QACjB,sBAAIA,UAAU,kCAAkCX,EAAMM,MACtD,wBAAMK,UAAU,uBACbZ,EAAaI,OAAOS,OAAS,EADhC,kBAGA,qBAAGD,UAAU,sBAAsBX,EAAMa,UAEzC,0BACEF,UAAU,8EACVG,QAASb,GAFX,iDAQF,2BAASU,UAAU,QACjB,uBAAKA,UAAU,qBACb,gBAAC,KAAD,CAAiBN,YAAaN,EAAaQ,UAC3C,gBAAC,KAAD,CAAaF,YAAaI,EAAcM,gBAAgB,KAE1D,qBACEJ,UAAU,qBACVK,MAAO,CAAEC,SAAU,SAAUC,aAAc,SAF7C,wBAMA,uBAAKP,UAAU,OACZT,EAAgCiB,KAAI,SAACd,EAAae,GAAd,OACnC,gBAAC,KAAD,CAAaC,IAAKD,EAAOf,YAAaA,YAsGpD,UA9F8B,WAC5B,IAGA,EAA0BiB,EAAAA,SAHE,CAC1BC,SAAS,IAEJC,EAAP,KAAcC,EAAd,KAEA,EAAkCH,EAAAA,UAAe,GAA1CI,EAAP,KAAkBC,EAAlB,KA4DA,OAjDAL,EAAAA,WAAgB,WACd,IAAMM,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAC5CC,EAAUL,EAAMM,IAAI,KACpBC,EAAWP,EAAMM,IAAI,KAE3BE,MAASC,0EAA2CJ,EAA/C,IAA0DE,GAC5DG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,GAAqB,oBAAjBA,EAAKC,QAKF,GAAqB,KAAjBD,EAAKC,QAAT,CAOP,IAAM3C,EAAe0C,EAAK1C,aAAa4C,QAAO,SAACC,EAAKvC,GAClD,IAAMwC,EAASD,EAWf,OAVIvC,EAAYE,QACdsC,EAAM,QAAN,iBACKxC,EADL,CAEE4B,QAAAA,IAEOY,EAAM,OACfA,EAAM,OAAWC,KAAKzC,GAEtBwC,EAAM,OAAa,CAACxC,GAEfwC,IACN,IAEHpB,EAAS,CACPF,SAAS,EACTxB,aAAAA,EACAC,MAAO,CAAEM,KAAMmC,EAAKnC,KAAMO,SAAU4B,EAAK5B,YAE3Cc,GAAa,QA1BXoB,MACE,mJANFA,MACE,2QAgCLC,OAAM,WACLD,MACE,qIAGL,EAAC,IAGF,gCACE,gBAAC,KAAD,KACE,gBAAC,IAAD,KACE,wDAGDvB,EAAMD,QACL,gBAAC,KAAD,MAEA,gBAACzB,EAAD,CACEG,kBArEqB,WAC7B0B,GAAa,IAqEL3B,MAAOwB,EAAMxB,MACbD,aAAcyB,EAAMzB,eAIvB2B,GACC,gBAAC,KAAD,CACEgB,QAAO,IAAMlB,EAAMzB,aAAaQ,QAAQC,OAAjC,IACPyC,QA1ES,YACjBC,EAAAA,EAAAA,GAAe,gBAAiB,SAAU,mBAC1CvB,GAAa","sources":["webpack://faq/./src/pages/sorteio.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { analyticsTrack } from \"../utils\"\nimport {\n  Layout,\n  LoadingScreen,\n  Participant,\n  ParticipantForm,\n  Popup,\n} from \"../components\"\n\ninterface State {\n  loading: boolean\n  participants?: any\n  group?: {\n    name: string\n    comments: string\n  }\n}\n\nconst Content = ({ participants, group, showFriendOnClick }) => {\n  const participantsWithoutSecretFriend = participants.others.filter(\n    (participant) => participant.name !== participants.current.friend\n  )\n\n  const secretFriend = participants.others.find(\n    (participant) => participant.name === participants.current.friend\n  )\n\n  return (\n    <>\n      <div className=\"page-container pt-4\">\n        <section className=\"mb-5\">\n          <h2 className=\"group__name font-weight-bolder\">{group.name}</h2>\n          <span className=\"group__participants\">\n            {participants.others.length + 1} participantes\n          </span>\n          <p className=\"group__description\">{group.comments}</p>\n\n          <button\n            className=\"show-friend-btn gradient-bg border-0 rounded-lg text-white font-weight-bold\"\n            onClick={showFriendOnClick}\n          >\n            Clique aqui para descobrir seu amigo secreto\n          </button>\n        </section>\n\n        <section className=\"mb-5\">\n          <div className=\"group__friend row\">\n            <ParticipantForm participant={participants.current} />\n            <Participant participant={secretFriend} isSecretFriend={true} />\n          </div>\n          <p\n            className=\"font-weight-bolder\"\n            style={{ fontSize: \"1.8rem\", marginBottom: \"32px\" }}\n          >\n            Outros Participantes\n          </p>\n          <div className=\"row\">\n            {participantsWithoutSecretFriend.map((participant, index) => (\n              <Participant key={index} participant={participant} />\n            ))}\n          </div>\n        </section>\n      </div>\n    </>\n  )\n}\nconst SorteioPage: React.FC = () => {\n  const initialState: State = {\n    loading: true,\n  }\n  const [state, setState] = React.useState(initialState)\n\n  const [showPopup, setShowPopup] = React.useState(false)\n\n  const showFriend: () => void = () => {\n    setShowPopup(true)\n  }\n\n  const hideFriend = () => {\n    analyticsTrack(\"cancel-button\", \"clique\", \"Campanha Méliuz\")\n    setShowPopup(false)\n  }\n\n  React.useEffect(() => {\n    const query = new URLSearchParams(window.location.search)\n    const groupId = query.get(\"g\")\n    const personId = query.get(\"p\")\n\n    fetch(`${process.env.GATSBY_API_HOST}/participant/${groupId}/${personId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message === \"Group not found\") {\n          alert(\n            \"Aparentemente o seu grupo de amigo secreto foi deletado pelo organizador no app. Caso esta mensagem esteja errada e seu grupo não tenha sido excluído, entre em contato com o suporte através do meajuda@papelzinho.com.br ou pelo chat na nossa página do facebook.\"\n          )\n          return\n        } else if (data.message === \"\") {\n          alert(\n            \"Participante não encontrado. Entre em contato com o suporte através do meajuda@papelzinho.com.br ou pelo chat na nossa página do facebook.\"\n          )\n          return\n        }\n\n        const participants = data.participants.reduce((acc, participant) => {\n          const newMap = acc\n          if (participant.current) {\n            newMap[\"current\"] = {\n              ...participant,\n              groupId,\n            }\n          } else if (newMap[\"others\"]) {\n            newMap[\"others\"].push(participant)\n          } else {\n            newMap[\"others\"] = [participant]\n          }\n          return newMap\n        }, {})\n\n        setState({\n          loading: false,\n          participants,\n          group: { name: data.name, comments: data.comments },\n        })\n        setShowPopup(true)\n      })\n      .catch(() => {\n        alert(\n          \"Sistema fora do ar. Estamos trabalhando para corrigir o problema o mais rápido possível. Tente acessar novamente mais tarde.\"\n        )\n      })\n  }, [false])\n\n  return (\n    <>\n      <Layout>\n        <Helmet>\n          <title>Sorteio | Papelzinho ™</title>\n        </Helmet>\n\n        {state.loading ? (\n          <LoadingScreen />\n        ) : (\n          <Content\n            showFriendOnClick={showFriend}\n            group={state.group}\n            participants={state.participants}\n          />\n        )}\n\n        {showPopup && (\n          <Popup\n            message={`\"${state.participants.current.friend}\"`}\n            action2={hideFriend}\n          />\n        )}\n      </Layout>\n    </>\n  )\n}\n\nexport default SorteioPage\n"],"names":["Content","participants","group","showFriendOnClick","participantsWithoutSecretFriend","others","filter","participant","name","current","friend","secretFriend","find","className","length","comments","onClick","isSecretFriend","style","fontSize","marginBottom","map","index","key","React","loading","state","setState","showPopup","setShowPopup","query","URLSearchParams","window","location","search","groupId","get","personId","fetch","process","then","response","json","data","message","reduce","acc","newMap","push","alert","catch","action2","analyticsTrack"],"sourceRoot":""}