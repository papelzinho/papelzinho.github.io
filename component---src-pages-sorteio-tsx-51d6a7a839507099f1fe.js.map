{"version":3,"sources":["webpack:///./src/pages/sorteio.tsx"],"names":["Content","participants","group","showFriendOnClick","className","name","comments","onClick","participant","current","others","map","index","key","SorteioPage","React","loading","state","setState","showPopup","setShowPopup","query","URLSearchParams","window","location","search","groupId","get","personId","fetch","process","then","response","json","data","reduce","acc","newMap","push","catch","alert","message","friend","action"],"mappings":"oJAmBMA,EAAU,SAAC,GAA+C,IAA7CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,kBACtC,OACE,gCACE,2BACE,2BAASC,UAAU,aACjB,sBAAIA,UAAU,sBAAsBF,EAAMG,MAC1C,yBAAIH,EAAMI,UAEV,0BACEF,UAAU,wEACVG,QAASJ,GAFX,iDAQF,2BAASC,UAAU,aACjB,uBAAKA,UAAU,OACb,gBAAC,IAAD,CAAiBI,YAAaP,EAAaQ,UAC1CR,EAAaS,OAAOC,KAAI,SAACH,EAAaI,GAAd,OACvB,gBAAC,IAAD,CAAaC,IAAKD,EAAOJ,YAAaA,YAyFrCM,UAjFe,WAC5B,IADkC,EAIRC,WAHE,CAC1BC,SAAS,IAEJC,EAJ2B,KAIpBC,EAJoB,OAMAH,YAAe,GAA1CI,EAN2B,KAMhBC,EANgB,KAqDlC,OArCAL,aAAgB,WACd,IAAMM,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAC5CC,EAAUL,EAAMM,IAAI,KACpBC,EAAWP,EAAMM,IAAI,KAE3BE,MAASC,0EAA2CJ,EAA/C,IAA0DE,GAC5DG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IAAMjC,EAAeiC,EAAKjC,aAAakC,QAAO,SAACC,EAAK5B,GAClD,IAAM6B,EAASD,EAWf,OAVI5B,EAAYC,QACd4B,EAAM,QAAN,iBACK7B,EADL,CAEEkB,YAEOW,EAAM,OACfA,EAAM,OAAWC,KAAK9B,GAEtB6B,EAAM,OAAa,CAAC7B,GAEf6B,IACN,IAEHnB,EAAS,CACPF,SAAS,EACTf,eACAC,MAAO,CAAEG,KAAM6B,EAAK7B,KAAMC,SAAU4B,EAAK5B,YAE3Cc,GAAa,MAEdmB,OAAM,WACLC,MACE,qIAGL,EAAC,IAGF,gCACE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,wDAGDvB,EAAMD,QACL,gBAAC,IAAD,MAEA,gBAAChB,EAAD,CACEG,kBAxDqB,WAC7BiB,GAAa,IAwDLlB,MAAOe,EAAMf,MACbD,aAAcgB,EAAMhB,eAIvBkB,GACC,gBAAC,IAAD,CACEsB,QAAO,eAAiBxB,EAAMhB,aAAaQ,QAAQiC,OAA5C,OACPC,OA7DS,WACjBvB,GAAa","file":"component---src-pages-sorteio-tsx-51d6a7a839507099f1fe.js","sourcesContent":["import * as React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport {\n  Layout,\n  LoadingScreen,\n  Participant,\n  ParticipantForm,\n  Popup,\n} from \"../components\"\n\ninterface State {\n  loading: boolean\n  participants?: any\n  group?: {\n    name: string\n    comments: string\n  }\n}\n\nconst Content = ({ participants, group, showFriendOnClick }) => {\n  return (\n    <>\n      <div>\n        <section className=\"px-5 pt-4\">\n          <h2 className=\"font-weight-bolder\">{group.name}</h2>\n          <p>{group.comments}</p>\n\n          <button\n            className=\"gradient-bg border-0 rounded-lg py-3 px-4 text-white font-weight-bold\"\n            onClick={showFriendOnClick}\n          >\n            Clique aqui para descobrir seu amigo secreto\n          </button>\n        </section>\n\n        <section className=\"px-5 pt-4\">\n          <div className=\"row\">\n            <ParticipantForm participant={participants.current} />\n            {participants.others.map((participant, index) => (\n              <Participant key={index} participant={participant} />\n            ))}\n          </div>\n        </section>\n      </div>\n    </>\n  )\n}\nconst SorteioPage: React.FC = () => {\n  const initialState: State = {\n    loading: true,\n  }\n  const [state, setState] = React.useState(initialState)\n\n  const [showPopup, setShowPopup] = React.useState(false)\n\n  const showFriend: () => void = () => {\n    setShowPopup(true)\n  }\n\n  const hideFriend = () => {\n    setShowPopup(false)\n  }\n\n  React.useEffect(() => {\n    const query = new URLSearchParams(window.location.search)\n    const groupId = query.get(\"g\")\n    const personId = query.get(\"p\")\n\n    fetch(`${process.env.GATSBY_API_HOST}/participant/${groupId}/${personId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        const participants = data.participants.reduce((acc, participant) => {\n          const newMap = acc\n          if (participant.current) {\n            newMap[\"current\"] = {\n              ...participant,\n              groupId,\n            }\n          } else if (newMap[\"others\"]) {\n            newMap[\"others\"].push(participant)\n          } else {\n            newMap[\"others\"] = [participant]\n          }\n          return newMap\n        }, {})\n\n        setState({\n          loading: false,\n          participants,\n          group: { name: data.name, comments: data.comments },\n        })\n        setShowPopup(true)\n      })\n      .catch(() => {\n        alert(\n          \"Sistema fora do ar. Estamos trabalhando para corrigir o problema o mais r√°pido poss√≠vel. Tente acessar novamente mais tarde.\"\n        )\n      })\n  }, [false])\n\n  return (\n    <>\n      <Layout>\n        <Helmet>\n          <title>Sorteio | Papelzinho ‚Ñ¢</title>\n        </Helmet>\n\n        {state.loading ? (\n          <LoadingScreen />\n        ) : (\n          <Content\n            showFriendOnClick={showFriend}\n            group={state.group}\n            participants={state.participants}\n          />\n        )}\n\n        {showPopup && (\n          <Popup\n            message={`Voc√™ tirou \"${state.participants.current.friend}\" üéâ`}\n            action={hideFriend}\n          />\n        )}\n      </Layout>\n    </>\n  )\n}\n\nexport default SorteioPage\n"],"sourceRoot":""}